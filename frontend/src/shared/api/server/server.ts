/**
 * Generated by orval v7.11.1 🍺
 * Do not edit manually.
 * Sentinel Monitoring API
 * API for service monitoring and incident management
 * OpenAPI spec version: 1.0
 */
import type {
  WebHealthCheckResponse,
  WebServerInfoResponse,
  WebSuccessResponse,
} from "../../types/model";

import { customFetcher } from ".././baseApi";

export const getServer = () => {
  /**
   * Checks the health of the server
   * @summary Health check
   */
  const getServerHealth = () => {
    return customFetcher<WebHealthCheckResponse>({
      url: `/server/health`,
      method: "GET",
    });
  };
  /**
   * Returns basic information about the server
   * @summary Get server info
   */
  const getServerInfo = () => {
    return customFetcher<WebServerInfoResponse>({
      url: `/server/info`,
      method: "GET",
    });
  };
  /**
   * Triggers a manual upgrade of the server
   * @summary Manual upgrade
   */
  const getServerUpgrade = () => {
    return customFetcher<WebSuccessResponse>({
      url: `/server/upgrade`,
      method: "GET",
    });
  };
  return { getServerHealth, getServerInfo, getServerUpgrade };
};
export type GetServerHealthResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getServer>["getServerHealth"]>>
>;
export type GetServerInfoResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getServer>["getServerInfo"]>>
>;
export type GetServerUpgradeResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getServer>["getServerUpgrade"]>>
>;
