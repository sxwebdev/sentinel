server:
  port: 8080
  host: "0.0.0.0"

monitoring:
  global:
    default_interval: 30s
    default_timeout: 10s
    default_retries: 3

database:
  path: "./data/db.sqlite3"

notifications:
  enabled: true
  urls:
    # Telegram
    - "telegram://token@telegram?chats=@channel-1[,chat-id-1,...]"
    # Discord
    - "discord://token@id"
    # Slack
    - "slack://[botname@]token-a/token-b/token-c"
    # Email
    - "smtp://username:password@host:port/?from=fromAddress&to=recipient1[,recipient2,...]"

services:
  - name: "example-api"
    protocol: "http"
    endpoint: "https://api.example.com/health"
    interval: 60s
    timeout: 5s
    retries: 2
    tags: ["api", "critical"]
    config:
      method: "GET"
      expected_status: 200

  - name: "example-database"
    protocol: "tcp"
    endpoint: "db.example.com:5432"
    interval: 30s
    timeout: 5s
    retries: 3
    tags: ["database", "postgres"]

  - name: "example-redis"
    protocol: "redis"
    endpoint: "redis.example.com:6379"
    interval: 30s
    timeout: 5s
    retries: 3
    tags: ["cache", "redis"]
    config:
      password: "${REDIS_PASSWORD}"
      db: 0

  - name: "example-grpc"
    protocol: "grpc"
    endpoint: "grpc.example.com:50051"
    interval: 30s
    timeout: 10s
    retries: 3
    tags: ["grpc", "backend"]
    config:
      check_type: "health"
      tls: true
      insecure_tls: false 