basePath: /api/v1
definitions:
  dbutils.FindResponseWithCount-storage_Incident:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/storage.Incident'
        type: array
    type: object
  dbutils.FindResponseWithCount-web_ServiceDTO:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/web.ServiceDTO'
        type: array
    type: object
  monitors.Config:
    properties:
      grpc:
        $ref: '#/definitions/monitors.GRPCConfig'
      http:
        $ref: '#/definitions/monitors.HTTPConfig'
      tcp:
        $ref: '#/definitions/monitors.TCPConfig'
    type: object
  monitors.EndpointConfig:
    properties:
      body:
        type: string
      expected_status:
        maximum: 599
        minimum: 100
        type: integer
      headers:
        additionalProperties:
          type: string
        type: object
      json_path:
        description: Path to extract value from JSON response
        type: string
      method:
        enum:
        - GET
        - POST
        - PUT
        - DELETE
        - HEAD
        - OPTIONS
        type: string
      name:
        type: string
      password:
        description: Basic Auth password
        type: string
      url:
        type: string
      username:
        description: Basic Auth username
        type: string
    required:
    - expected_status
    - method
    - name
    - url
    type: object
  monitors.GRPCConfig:
    properties:
      check_type:
        enum:
        - health
        - reflection
        - connectivity
        type: string
      endpoint:
        type: string
      insecure_tls:
        type: boolean
      service_name:
        type: string
      tls:
        type: boolean
    required:
    - check_type
    - endpoint
    type: object
  monitors.HTTPConfig:
    properties:
      condition:
        type: string
      endpoints:
        items:
          $ref: '#/definitions/monitors.EndpointConfig'
        minItems: 1
        type: array
      timeout:
        example: 30000
        type: integer
    required:
    - endpoints
    type: object
  monitors.TCPConfig:
    properties:
      endpoint:
        type: string
      expect_data:
        type: string
      send_data:
        type: string
    required:
    - endpoint
    type: object
  storage.Incident:
    properties:
      duration:
        type: integer
      end_time:
        type: string
      error:
        type: string
      id:
        type: string
      resolved:
        type: boolean
      service_id:
        type: string
      start_time:
        type: string
    type: object
  storage.ServiceProtocolType:
    enum:
    - http
    - tcp
    - grpc
    type: string
    x-enum-varnames:
    - ServiceProtocolTypeHTTP
    - ServiceProtocolTypeTCP
    - ServiceProtocolTypeGRPC
  storage.ServiceStats:
    properties:
      avg_response_time:
        type: integer
      period:
        type: integer
      service_id:
        type: string
      total_downtime:
        type: integer
      total_incidents:
        type: integer
      uptime_percentage:
        type: number
    type: object
  storage.ServiceStatus:
    enum:
    - unknown
    - up
    - down
    - maintenance
    type: string
    x-enum-varnames:
    - StatusUnknown
    - StatusUp
    - StatusDown
    - StatusMaintenance
  web.AvailableUpdate:
    properties:
      description:
        type: string
      tag_name:
        type: string
      url:
        type: string
    type: object
  web.CreateUpdateServiceRequest:
    properties:
      config:
        $ref: '#/definitions/monitors.Config'
      interval:
        example: 30000
        type: integer
      is_enabled:
        example: true
        type: boolean
      name:
        example: Web Server
        type: string
      protocol:
        allOf:
        - $ref: '#/definitions/storage.ServiceProtocolType'
        example: http
      retries:
        example: 3
        type: integer
      tags:
        example:
        - web
        - production
        items:
          type: string
        type: array
      timeout:
        example: 5000
        type: integer
    type: object
  web.DashboardStats:
    description: Dashboard statistics
    properties:
      active_incidents:
        example: 2
        type: integer
      avg_response_time:
        example: 150
        type: integer
      checks_per_minute:
        example: 60
        type: integer
      last_check_time:
        type: string
      protocols:
        additionalProperties:
          type: integer
        type: object
      services_down:
        example: 1
        type: integer
      services_unknown:
        example: 1
        type: integer
      services_up:
        example: 8
        type: integer
      total_checks:
        example: 1000
        type: integer
      total_services:
        example: 10
        type: integer
      uptime_percentage:
        example: 95.5
        type: number
    type: object
  web.ErrorResponse:
    description: Error response
    properties:
      error:
        example: Error description
        type: string
    type: object
  web.ServerInfoResponse:
    properties:
      arch:
        example: amd64
        type: string
      available_update:
        $ref: '#/definitions/web.AvailableUpdate'
      build_date:
        example: "2023-10-01T12:00:00Z"
        type: string
      commit_hash:
        example: abc123def456
        type: string
      go_version:
        example: go1.24.4
        type: string
      os:
        example: linux
        type: string
      sqlite_version:
        example: 3.50.1
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  web.ServiceDTO:
    properties:
      active_incidents:
        example: 2
        type: integer
      config:
        $ref: '#/definitions/monitors.Config'
      consecutive_fails:
        example: 1
        type: integer
      consecutive_success:
        example: 5
        type: integer
      id:
        example: service-1
        type: string
      interval:
        example: 30000
        type: integer
      is_enabled:
        example: true
        type: boolean
      last_check:
        example: "2023-10-01T12:00:00Z"
        type: string
      last_error:
        example: Connection timeout
        type: string
      name:
        example: Web Server
        type: string
      next_check:
        example: "2023-10-01T12:05:00Z"
        type: string
      protocol:
        allOf:
        - $ref: '#/definitions/storage.ServiceProtocolType'
        example: http
      response_time:
        example: 150000000
        type: integer
      retries:
        example: 3
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/storage.ServiceStatus'
        example: up / down / unknown
      tags:
        example:
        - web
        - production
        items:
          type: string
        type: array
      timeout:
        example: 5000
        type: integer
      total_checks:
        example: 100
        type: integer
      total_incidents:
        example: 10
        type: integer
    type: object
  web.SuccessResponse:
    description: Successful response
    properties:
      message:
        example: Operation completed successfully
        type: string
    type: object
  web.healthCheckResponse:
    properties:
      status:
        example: healthy
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for service monitoring and incident management
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Sentinel Monitoring API
  version: "1.0"
paths:
  /dashboard/stats:
    get:
      consumes:
      - application/json
      description: Returns statistics for the dashboard
      produces:
      - application/json
      responses:
        "200":
          description: Dashboard statistics
          schema:
            $ref: '#/definitions/web.DashboardStats'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get dashboard statistics
      tags:
      - dashboard
  /incidents:
    get:
      consumes:
      - application/json
      description: Returns a list of recent incidents across all services
      parameters:
      - description: Filter by service ID or incident ID
        in: query
        name: search
        type: string
      - description: Filter by resolved status
        in: query
        name: resolved
        type: boolean
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 100)
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of incidents
          schema:
            $ref: '#/definitions/dbutils.FindResponseWithCount-storage_Incident'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get recent incidents
      tags:
      - incidents
  /server/health:
    get:
      consumes:
      - application/json
      description: Checks the health of the server
      produces:
      - application/json
      responses:
        "200":
          description: Health check successful
          schema:
            $ref: '#/definitions/web.healthCheckResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Health check
      tags:
      - server
  /server/info:
    get:
      consumes:
      - application/json
      description: Returns basic information about the server
      produces:
      - application/json
      responses:
        "200":
          description: Server information
          schema:
            $ref: '#/definitions/web.ServerInfoResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get server info
      tags:
      - server
  /server/upgrade:
    get:
      consumes:
      - application/json
      description: Triggers a manual upgrade of the server
      produces:
      - application/json
      responses:
        "200":
          description: Upgrade initiated successfully
          schema:
            $ref: '#/definitions/web.SuccessResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Manual upgrade
      tags:
      - server
  /services:
    get:
      consumes:
      - application/json
      description: Returns a list of all services with their current states
      parameters:
      - description: Filter by service name
        in: query
        name: name
        type: string
      - collectionFormat: csv
        description: Filter by service tags
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: Filter by service status
        in: query
        name: status
        type: string
      - description: Filter by enabled status
        in: query
        name: is_enabled
        type: boolean
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - description: Order by field
        in: query
        name: order_by
        type: string
      - description: Page number (for pagination)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 20)
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of services with states
          schema:
            $ref: '#/definitions/dbutils.FindResponseWithCount-web_ServiceDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get all services
      tags:
      - services
    post:
      consumes:
      - application/json
      description: Creates a new service for monitoring
      parameters:
      - description: Service configuration
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/web.CreateUpdateServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Service created
          schema:
            $ref: '#/definitions/web.ServiceDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Create new service
      tags:
      - services
  /services/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a service from the monitoring system
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Service deleted
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Delete service
      tags:
      - services
    get:
      consumes:
      - application/json
      description: Returns detailed information about a specific service
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Service details with state
          schema:
            $ref: '#/definitions/web.ServiceDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "404":
          description: Service not found
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get service details
      tags:
      - services
    put:
      consumes:
      - application/json
      description: Updates an existing service
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      - description: New service configuration
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/web.CreateUpdateServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Service updated
          schema:
            $ref: '#/definitions/web.ServiceDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "404":
          description: Service not found
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Update service
      tags:
      - services
  /services/{id}/check:
    post:
      consumes:
      - application/json
      description: Triggers a manual check of service status
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Check triggered successfully
          schema:
            $ref: '#/definitions/web.SuccessResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "404":
          description: Service not found
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Trigger service check
      tags:
      - services
  /services/{id}/incidents:
    get:
      consumes:
      - application/json
      description: Returns a list of incidents for a specific service
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      - description: Filter by incident ID
        in: query
        name: incident_id
        type: string
      - description: Filter by resolved status
        in: query
        name: resolved
        type: boolean
      - description: Page number (for pagination)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 20)
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of incidents
          schema:
            $ref: '#/definitions/dbutils.FindResponseWithCount-storage_Incident'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get service incidents
      tags:
      - incidents
  /services/{id}/incidents/{incidentId}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific incident for a service
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      - description: Incident ID
        in: path
        name: incidentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Incident deleted
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "404":
          description: Incident not found
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Delete incident
      tags:
      - incidents
  /services/{id}/resolve:
    post:
      consumes:
      - application/json
      description: Forcefully resolves all active incidents for a service
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Incidents resolved successfully
          schema:
            $ref: '#/definitions/web.SuccessResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Resolve service incidents
      tags:
      - incidents
  /services/{id}/stats:
    get:
      consumes:
      - application/json
      description: Returns service statistics for the specified period
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      - description: Number of days (default 30)
        in: query
        name: days
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Service statistics
          schema:
            $ref: '#/definitions/storage.ServiceStats'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/web.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get service statistics
      tags:
      - statistics
  /tags:
    get:
      consumes:
      - application/json
      description: Retrieves all unique tags used across services
      produces:
      - application/json
      responses:
        "200":
          description: List of unique tags
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get all tags
      tags:
      - tags
  /tags/count:
    get:
      consumes:
      - application/json
      description: Retrieves all unique tags along with their usage count across services
      produces:
      - application/json
      responses:
        "200":
          description: Map of tags with their usage count
          schema:
            additionalProperties:
              type: integer
            type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/web.ErrorResponse'
      summary: Get all tags with usage count
      tags:
      - tags
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
